#+title: Checkerboards Quark LP Keymap
#+author: Martin Chaperot
#+property: header-args :tangle keymap.c

This is my QMK config for my [[https://www.checkerboards.xyz/quark-lp.html][Quark LP keyboard]]. It makes use of home row mods (SCGA), only uses 3 layers and only requires the use of 39/48 keys (tho all keys are mapped for convience).

* How to use
:PROPERTIES:
:header-args: :tangle no
:END:
This is mainly so that I remember how to use QMK without needed to refer back to the docs everytime.
[[https://docs.qmk.fm/][Here are the docs]] though if needed.
** Setup environment
For convenience
#+begin_src bash-ts
qmk config user.keyboard=checkerboards/quark_lp
qmk config user.keymap=tinmarr
#+end_src
** Setup keymap folder
If this isn't setup already, we want to first create the folder then symlink from this git repo.
To check if the keymap already exists, look in: ~qmk_firmware/keyboards/checkerboards/quark_lp/keymaps~. Otherwise:
#+begin_src bash-ts
qmk new-keymap # Creates the folder the tinmarr in the folder above
# cd into the created folder
rm *
ln -s ~/qmk/quark_lp-qmk-keymaps/* . # Should just be the location where this repo is cloned
#+end_src
This will let you just work in this repo without needing to mess with the QMK firmware repo.
** Compile and flash
#+begin_src bash-ts
qmk compile # To compile
qmk flash # To flash - make sure to press the little reset hole on the back
#+end_src
* Header/definitions
#+begin_src c-ts
#include QMK_KEYBOARD_H

// Defines for task manager and such
#define CALTDEL LCTL(LALT(KC_DEL))
#define TSKMGR LCTL(LSFT(KC_ESC))

// Define homerow mods
// Left-hand home row mods
#define HOME_A LSFT_T(KC_A)
#define HOME_S LCTL_T(KC_S)
#define HOME_D LGUI_T(KC_D)
#define HOME_F LALT_T(KC_F)

// Right-hand home row mods
#define HOME_J LALT_T(KC_J)
#define HOME_K RGUI_T(KC_K)
#define HOME_L RCTL_T(KC_L)
#define HOME_SCLN RSFT_T(KC_SCLN)

enum _Layers {
  _BASE,
  _SYS,
  _GAME,
  _NUM
};

// Open up the array
const uint16_t PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = {
#+end_src
* Base Layer (L0)
This is the base/default layer
|-------+---------+--------+---------+-------+------+-----+------------------+---------+--------+---------+-------|
|       |         |        |         |       |      |     |                  |         |        |         |       |
|-------+---------+--------+---------+-------+------+-----+------------------+---------+--------+---------+-------|
| Tab   | Q       | W      | E       | R     | T    | Y   | U                | I       | O      | P       | \     |
|-------+---------+--------+---------+-------+------+-----+------------------+---------+--------+---------+-------|
| Esc   | Shift/A | Ctrl/S | Super/D | Alt/F | G    | H   | Alt/J            | Super/K | Ctrl/L | Shift/; | "     |
|-------+---------+--------+---------+-------+------+-----+------------------+---------+--------+---------+-------|
| Shift | Z       | X      | C       | V     | B    | N   | M                | ,       | .      | /       | Enter |
|-------+---------+--------+---------+-------+------+-----+------------------+---------+--------+---------+-------|
| Ctrl  | Super   | Alt    | App     | L_Num | Bspc | Spc | L_System/Compose | Left    | Down   | Up      | Right |
|-------+---------+--------+---------+-------+------+-----+------------------+---------+--------+---------+-------|
#+begin_src c-ts
[_BASE] = LAYOUT_ortho_4x12(
    KC_TAB,   KC_Q,     KC_W,     KC_E,    KC_R,      KC_T,     KC_Y,    KC_U,               KC_I,     KC_O,     KC_P,       KC_BSLS,
    KC_ESC,   HOME_A,   HOME_S,   HOME_D,  HOME_F,    KC_G,     KC_H,    HOME_J,             HOME_K,   HOME_L,   HOME_SCLN,  KC_QUOT,
    KC_LSFT,  KC_Z,     KC_X,     KC_C,    KC_V,      KC_B,     KC_N,    KC_M,               KC_COMM,  KC_DOT,   KC_SLSH,    KC_ENT,
    KC_LCTL,  KC_LGUI,  KC_LALT,  KC_APP,  MO(_NUM),  KC_BSPC,  KC_SPC,  LT(_SYS, KC_ALGR),  KC_LEFT,  KC_DOWN,  KC_UP,      KC_RIGHT
),
#+end_src
* System Layer (L1)
Layer that let's me access system stuff and let's me toggle to the gaming layer.
|-----+------+------------+------+----------------+---------+---------+------+------+-------+-----+------|
|     |      |            |      |                |         |         |      |      |       |     |      |
|-----+------+------------+------+----------------+---------+---------+------+------+-------+-----+------|
| F1  | F2   | F3         | F4   | F5             | F6      | F7      | F8   | F9   | F10   | F11 | F12  |
|-----+------+------------+------+----------------+---------+---------+------+------+-------+-----+------|
| xxx | Prev | Play/Pause | Next | xxx            | xxx     | Left    | Down | Up   | Right | xxx | xxx  |
|-----+------+------------+------+----------------+---------+---------+------+------+-------+-----+------|
| xxx | Mute | Vol-       | Vol+ | xxx            | Bright- | Bright+ | PgDn | PgUp | xxx   | xxx | xxx  |
|-----+------+------------+------+----------------+---------+---------+------+------+-------+-----+------|
| xxx | xxx  | xxx        | xxx  | Default L_Game | Del     |         | xxx  | xxx  | xxx   | xxx | PrSc |
|-----+------+------------+------+----------------+---------+---------+------+------+-------+-----+------|
#+begin_src c-ts
[1] = LAYOUT_ortho_4x12(
    KC_F1,    KC_F2,    KC_F3,    KC_F4,    KC_F5,      KC_F6,    KC_F7,    KC_F8,    KC_F9,    KC_F10,    KC_F11,   KC_F12,
    XXXXXXX,  KC_MPRV,  KC_MPLY,  KC_MNXT,  XXXXXXX,    XXXXXXX,  KC_LEFT,  KC_DOWN,  KC_UP,    KC_RIGHT,  XXXXXXX,  XXXXXXX,
    XXXXXXX,  KC_MUTE,  KC_VOLD,  KC_VOLU,  XXXXXXX,    KC_BRID,  KC_BRIU,  KC_PGDN,  KC_PGUP,  XXXXXXX,   XXXXXXX,  XXXXXXX,
    XXXXXXX,  XXXXXXX,  XXXXXXX,  XXXXXXX,  DF(_GAME),  KC_DEL,   _______,  XXXXXXX,  XXXXXXX,  XXXXXXX,   XXXXXXX,  KC_PSCR
),
#+end_src
* Gaming Layer (L2)
This is the gaming layer. Removes all mod-taps and fancy stuff from layer 0. Layer 1 remains accessible, but layer 2 does not (must go through layer 0).
|-------+-------+-----+-----+---+-----+------+----------------+------+------+----+-------|
|       |       |     |     |   |     |      |                |      |      |    |       |
|-------+-------+-----+-----+---+-----+------+----------------+------+------+----+-------|
| Tab   | Q     | W   | E   | R | T   | Y    | U              | I    | O    | P  | \     |
|-------+-------+-----+-----+---+-----+------+----------------+------+------+----+-------|
| Esc   | A     | S   | D   | F | G   | H    | J              | K    | L    | ;  | "     |
|-------+-------+-----+-----+---+-----+------+----------------+------+------+----+-------|
| Shift | Z     | X   | C   | V | B   | N    | M              | ,    | .    | /  | Enter |
|-------+-------+-----+-----+---+-----+------+----------------+------+------+----+-------|
| Ctrl  | Super | Alt | Bspc |   | Spc | Spc | Default L_Base | Left | Down | Up | Right |
|-------+-------+-----+-----+---+-----+------+----------------+------+------+----+-------|
#+begin_src c-ts
[2] = LAYOUT_ortho_4x12(
    KC_TAB,   KC_Q,     KC_W,     KC_E,     KC_R,     KC_T,    KC_Y,    KC_U,       KC_I,     KC_O,     KC_P,     KC_BSLS,
    KC_ESC,   KC_A,     KC_S,     KC_D,     KC_F,     KC_G,    KC_H,    KC_J,       KC_K,     KC_L,     KC_SCLN,  KC_QUOT,
    KC_LSFT,  KC_Z,     KC_X,     KC_C,     KC_V,     KC_B,    KC_N,    KC_M,       KC_COMM,  KC_DOT,   KC_SLSH,  KC_ENT,
    KC_LCTL,  KC_LGUI,  KC_LALT,  KC_BSPC,  _______,  KC_SPC,  KC_SPC,  DF(_BASE),  KC_LEFT,  KC_DOWN,  KC_UP,    KC_RIGHT
),
#+end_src
* Number/Symbols Layer (L3)
|---+-----+-----+---+---+---+---+-----+-----+-----+-----+-----|
|   |     |     |   |   |   |   |     |     |     |     |     |
|---+-----+-----+---+---+---+---+-----+-----+-----+-----+-----|
| ~ | !   | @   | ( | ) | { | } | [   | ]   | -   | _   | xxx |
|---+-----+-----+---+---+---+---+-----+-----+-----+-----+-----|
| ` | 1   | 2   | 3 | 4 | 5 | 6 | 7   | 8   | 9   | 0   | xxx |
|---+-----+-----+---+---+---+---+-----+-----+-----+-----+-----|
|   | xxx | xxx | & | % | ^ | $ | #   | =   | +   | *   | xxx |
|---+-----+-----+---+---+---+---+-----+-----+-----+-----+-----|
|   |     |     |   |   |   |   | xxx | xxx | xxx | xxx | xxx |
|---+-----+-----+---+---+---+---+-----+-----+-----+-----+-----|
#+begin_src c-ts
[3] = LAYOUT_ortho_4x12(
    KC_TILD,  KC_EXLM,  KC_AT,    KC_LPRN,  KC_RPRN,  KC_LCBR,  KC_RCBR,  KC_LBRC,  KC_RBRC,  KC_MINS,  KC_UNDS,  XXXXXXX,
    KC_GRV,   KC_1,     KC_2,     KC_3,     KC_4,     KC_5,     KC_6,     KC_7,     KC_8,     KC_9,     KC_0,     XXXXXXX,
    _______,  XXXXXXX,  XXXXXXX,  KC_AMPR,  KC_PERC,  KC_CIRC,  KC_DLR,   KC_HASH,  KC_EQL,   KC_PLUS,  KC_ASTR,  XXXXXXX,
    _______,  _______,  _______,  _______,  _______,  _______,  _______,  XXXXXXX,  XXXXXXX,  XXXXXXX,  XXXXXXX,  XXXXXXX
),
#+end_src
* Array close
#+begin_src c-ts
};
#+end_src
