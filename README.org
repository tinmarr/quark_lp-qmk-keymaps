#+title: Checkerboards Quark LP Keymap
#+author: Martin Chaperot
#+property: header-args :tangle keymap.c

This is my QMK config for my [[https://www.checkerboards.xyz/quark-lp.html][Quark LP keyboard]]. I've set it up in a split manner. It makes use of home row mods (SCGA) and uses 36 keys.

There is also a "gaming" layer that can be toggled which disables home row mods.

* How to use
:PROPERTIES:
:header-args: :tangle no
:END:
This is mainly so that I remember how to use QMK without needed to refer back to the docs everytime.
[[https://docs.qmk.fm/][Here are the docs]] though if needed.
** Setup environment
For convenience
#+begin_src bash-ts
qmk config user.keyboard=checkerboards/quark_lp
qmk config user.keymap=tinmarr
#+end_src
** Setup keymap folder
If this isn't setup already, we want to first create the folder then symlink from this git repo.
To check if the keymap already exists, look in: ~qmk_firmware/keyboards/checkerboards/quark_lp/keymaps~. Otherwise:
#+begin_src bash-ts
qmk new-keymap # Creates the folder the tinmarr in the folder above
# cd into the created folder
rm *
ln -s ~/qmk/quark_lp-qmk-keymaps/* . # Should just be the location where this repo is cloned
#+end_src
This will let you just work in this repo without needing to mess with the QMK firmware repo.
** Compile and flash
#+begin_src bash-ts
qmk compile # To compile
qmk flash # To flash - make sure to press the little reset hole on the back
#+end_src
* Header/definitions
#+begin_src c-ts
#include QMK_KEYBOARD_H

// Defines for task manager and such
#define CALTDEL LCTL(LALT(KC_DEL))
#define TSKMGR LCTL(LSFT(KC_ESC))

// Define homerow mods
// Left-hand home row mods
#define HOME_A LSFT_T(KC_A)
#define HOME_S LCTL_T(KC_S)
#define HOME_D LGUI_T(KC_D)
#define HOME_F LALT_T(KC_F)

// Right-hand home row mods
#define HOME_J LALT_T(KC_J)
#define HOME_K RGUI_T(KC_K)
#define HOME_L RCTL_T(KC_L)
#define HOME_SCLN RSFT_T(KC_SCLN)

enum _Layers {
  _BASE,
  _SYS,
  _GAME,
  _NUM
};

// Open up the array
const uint16_t PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = {
#+end_src
* Base Layer
This is the base/default layer
|---------+--------+---------+-----------+------+---+---+-----+----------------+---------+--------+---------|
|         |        |         |           |      |   |   |     |                |         |        |         |
|---------+--------+---------+-----------+------+---+---+-----+----------------+---------+--------+---------|
| Q       | W      | E       | R         | T    |   |   | Y   | U              | I       | O      | P       |
|---------+--------+---------+-----------+------+---+---+-----+----------------+---------+--------+---------|
| Shift/A | Ctrl/S | Super/D | Alt/F     | G    |   |   | H   | Alt/J          | Super/K | Ctrl/L | Shift/; |
|---------+--------+---------+-----------+------+---+---+-----+----------------+---------+--------+---------|
| Z       | X      | C       | V         | B    |   |   | N   | M              | ,       | .      | /       |
|---------+--------+---------+-----------+------+---+---+-----+----------------+---------+--------+---------|
|         |        | Tab     | L_Num/Esc | Bspc |   |   | Spc | L_System/Enter | Compose |        |         |
|---------+--------+---------+-----------+------+---+---+-----+----------------+---------+--------+---------|
#+begin_src c-ts
[_BASE] = LAYOUT_ortho_4x12(
    KC_Q,     KC_W,     KC_E,    KC_R,              KC_T,     XXXXXXX,  XXXXXXX,  KC_Y,    KC_U,              KC_I,     KC_O,     KC_P,
    HOME_A,   HOME_S,   HOME_D,  HOME_F,            KC_G,     XXXXXXX,  XXXXXXX,  KC_H,    HOME_J,            HOME_K,   HOME_L,   HOME_SCLN,
    KC_Z,     KC_X,     KC_C,    KC_V,              KC_B,     XXXXXXX,  XXXXXXX,  KC_N,    KC_M,              KC_COMM,  KC_DOT,   KC_SLSH,
    XXXXXXX,  XXXXXXX,  KC_TAB,  LT(_NUM, KC_ESC),  KC_BSPC,  XXXXXXX,  XXXXXXX,  KC_SPC,  LT(_SYS, KC_ENT),  KC_ALGR,  XXXXXXX,  XXXXXXX
),
#+end_src
* System Layer
Layer that let's me access system stuff and let's me toggle to the gaming layer.
|------+------------+------+----------------+---------+-----+-----+---------+------+------+-------+------|
|      |            |      |                |         |     |     |         |      |      |       |      |
|------+------------+------+----------------+---------+-----+-----+---------+------+------+-------+------|
| F1   | F2         | F3   | F4             | F5      | xxx | xxx | F6      | F7   | F8   | F9    | F10  |
|------+------------+------+----------------+---------+-----+-----+---------+------+------+-------+------|
| Prev | Play/Pause | Next | xxx            | xxx     | xxx | xxx | Left    | Down | Up   | Right | PrSc |
|------+------------+------+----------------+---------+-----+-----+---------+------+------+-------+------|
| Mute | Vol-       | Vol+ | xxx            | Bright- | xxx | xxx | Bright+ | PgDn | PgUp | F11   | F12  |
|------+------------+------+----------------+---------+-----+-----+---------+------+------+-------+------|
| xxx  | xxx        |      | Default L_Game | Del     | xxx | xxx |         |      |      | xxx   | xxx  |
|------+------------+------+----------------+---------+-----+-----+---------+------+------+-------+------|
#+begin_src c-ts
[_SYS] = LAYOUT_ortho_4x12(
    KC_F1,    KC_F2,    KC_F3,    KC_F4,      KC_F5,    XXXXXXX,  XXXXXXX,  KC_F6,    KC_F7,    KC_F8,    KC_F9,     KC_F10,
    KC_MPRV,  KC_MPLY,  KC_MNXT,  XXXXXXX,    XXXXXXX,  XXXXXXX,  XXXXXXX,  KC_LEFT,  KC_DOWN,  KC_UP,    KC_RIGHT,  KC_PSCR,
    KC_MUTE,  KC_VOLD,  KC_VOLU,  XXXXXXX,    KC_BRID,  XXXXXXX,  XXXXXXX,  KC_BRIU,  KC_PGDN,  KC_PGUP,  KC_F11,    KC_F12,
    XXXXXXX,  XXXXXXX,  XXXXXXX,  DF(_GAME),  KC_DEL,   XXXXXXX,  XXXXXXX,  _______,  XXXXXXX,  XXXXXXX,  XXXXXXX,   XXXXXXX
),
#+end_src
* Gaming Layer
This is the gaming layer. Removes all mod-taps and fancy stuff from layer 0. Layer 1 remains accessible, but layer 2 does not (must go through layer 0).
|-------+-------+-----+------+---+-----+-----+----------------+------+------+----+-------|
|       |       |     |      |   |     |     |                |      |      |    |       |
|-------+-------+-----+------+---+-----+-----+----------------+------+------+----+-------|
| Tab   | Q     | W   | E    | R | T   | Y   | U              | I    | O    | P  | \     |
|-------+-------+-----+------+---+-----+-----+----------------+------+------+----+-------|
| Esc   | A     | S   | D    | F | G   | H   | J              | K    | L    | ;  | Enter |
|-------+-------+-----+------+---+-----+-----+----------------+------+------+----+-------|
| Shift | Z     | X   | C    | V | B   | N   | M              | ,    | .    | /  | "     |
|-------+-------+-----+------+---+-----+-----+----------------+------+------+----+-------|
| Ctrl  | Super | Alt | Bspc |   | Spc | Spc | Default L_Base | Left | Down | Up | Right |
|-------+-------+-----+------+---+-----+-----+----------------+------+------+----+-------|
#+begin_src c-ts
[_GAME] = LAYOUT_ortho_4x12(
    KC_TAB,   KC_Q,     KC_W,     KC_E,     KC_R,     KC_T,    KC_Y,    KC_U,       KC_I,     KC_O,     KC_P,     KC_BSLS,
    KC_ESC,   KC_A,     KC_S,     KC_D,     KC_F,     KC_G,    KC_H,    KC_J,       KC_K,     KC_L,     KC_SCLN,  KC_ENT,
    KC_LSFT,  KC_Z,     KC_X,     KC_C,     KC_V,     KC_B,    KC_N,    KC_M,       KC_COMM,  KC_DOT,   KC_SLSH,  KC_QUOT,
    KC_LCTL,  KC_LGUI,  KC_LALT,  KC_BSPC,  _______,  KC_SPC,  KC_SPC,  DF(_BASE),  KC_LEFT,  KC_DOWN,  KC_UP,    KC_RIGHT
),
#+end_src
* Number/Symbols Layer
|---+---+---+---+---+---+---+---+---+---+---+---|
|   |   |   |   |   |   |   |   |   |   |   |   |
|---+---+---+---+---+---+---+---+---+---+---+---|
| ` | ~ | ( | ) | { |   |   | } | [ | ] | - | _ |
|---+---+---+---+---+---+---+---+---+---+---+---|
| 1 | 2 | 3 | 4 | 5 |   |   | 6 | 7 | 8 | 9 | 0 |
|---+---+---+---+---+---+---+---+---+---+---+---|
| \ | ' | & | % | ^ |   |   | $ | # | = | + | * |
|---+---+---+---+---+---+---+---+---+---+---+---|
|   |   |   |   |   |   |   |   |   |   |   |   |
|---+---+---+---+---+---+---+---+---+---+---+---|
#+begin_src c-ts
[_NUM] = LAYOUT_ortho_4x12(
    KC_GRV,  KC_TILD,  KC_LPRN,  KC_RPRN,  KC_LCBR,  XXXXXXX,  XXXXXXX,  KC_RCBR,  KC_LBRC,  KC_RBRC,  KC_MINS,  KC_UNDS,
    KC_1,    KC_2,     KC_3,     KC_4,     KC_5,     XXXXXXX,  XXXXXXX,  KC_6,     KC_7,     KC_8,     KC_9,     KC_0,
    KC_BSLS, KC_QUOT,  KC_AMPR,  KC_PERC,  KC_CIRC,  XXXXXXX,  XXXXXXX,  KC_DLR,   KC_HASH,  KC_EQL,   KC_PLUS,  KC_ASTR,
    XXXXXXX, XXXXXXX,  _______,  _______,  _______,  XXXXXXX,  XXXXXXX,  _______,  XXXXXXX,  _______,  XXXXXXX,  XXXXXXX

),
#+end_src
* Array close
#+begin_src c-ts
};
#+end_src
